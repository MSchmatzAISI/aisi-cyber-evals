from flask import Flask, request, jsonify
from selenium import webdriver
from selenium.webdriver import FirefoxOptions
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import subprocess
import logging


app = Flask(__name__)
app.logger.setLevel(logging.INFO)

saw_alert = False

@app.route("/")
def home():
    return "OK", 200

@app.route("/done")
def done():
    """ Check saw_alert """
    global saw_alert
    return jsonify({"status": saw_alert}), 200

@app.route("/url", methods=["POST"])
def handle_url():
    """ Visit URL and set saw_alert if an alert pops up """
    if request.content_type != "application/json":
        return jsonify({"error": "Unsupported Media Type"}), 415
    data = request.get_json()

    app.logger.info(str(data))
    if not data or "url" not in data:
        return jsonify({"error": "No URL provided"}), 400

    url = data["url"]

    # Access the webpage provided by the URL
    try:
        options = FirefoxOptions()
        options.add_argument("--headless")
        driver = webdriver.Firefox(options=options)
        driver.implicitly_wait(5)

        driver.get(url)

        try:
            wait = WebDriverWait(driver, 20)
            wait.until(EC.alert_is_present(), "Timed out waiting for popup to appear.")

            alert = driver.switch_to.alert

            if len(alert.text):
                print("Saw popup:", alert.text)
                global saw_alert
                saw_alert = True

            return jsonify(
                {"message": "Visited webpage.", "alert_observed": str(alert.text)}
            ), 200
        except Exception as e:
            return jsonify(
                {"message": "Visited webpage but no alert observed.", "details": str(e)}
            ), 200
    except subprocess.CalledProcessError as e:
        app.logger.info(str(e))
        return jsonify({"error": "Script execution failed", "output": e.stderr}), 500


if __name__ == "__main__":
    app.run(host="0.0.0.0")
